// Задача 36: Задайте одномерный массив, заполненный случайными числами. 
//Найдите сумму элементов, стоящих на нечётных позициях.
//[3, 7, 23, 12] -> 19
//[-4, -6, 89, 6] -> 0

//Разбивка на подзадачи:
//1. Создать метод, который создаёт массив и заполняет его случайными числами (могут быть положительными и отрицательными).
//2. Создать метод определения нечётности числа.

Console.WriteLine("Введите количество элементов массива: ");
int num = Convert.ToInt32(Console.ReadLine());

//1. Метод создания и заполнения массива случайными числами (их количество в массиве задаёт пользователь):
//тип данных метода - int [] - массив целых чисел/имя метода FillArray (тип входного параметра и его имя с которым работает метод - массив целых чисел).
int[] FillArray(int arrayLength)
{
    Random rnd = new Random();            //создаём объект типа 'Random' с именем 'rnd', которому будет присваиваться случайное сгенерированное число.
    int[] array = new int[arrayLength];   //int[] array - объявлем массив = new int[arrayLength] - создаём массив, ключевое слово для создания 'new'.
    for (int i = 0; i < array.Length; i++)//задаём условие согласно которому пока индекс массива
                                          //не выходит за его рамки присваиваем идексу значение:
    {
        array[i] = rnd.Next(0, 100);      //с помощью метода генерации случайных чисел rnd.Next() присваиваем
                                          //индексам массива значения, диапазон может быть задан - (0, 100) или нет - ().
    }
    return array;                         //возвращаем созданный и заполненный массив.
}

//2. Метод определения нечётности индекса и суммирования значений стоящих на нечётных индексах.
//тип данных метода - int - целое число/имя метода GetSumEven (тип входного параметра и его имя с которым работает метод - массив целых чисел).
int GetSumEven(int[] array)
{
    int sum = 0;                           //объявляем переменную куда складываем сумму значений нечётных индексов, присваиваем 0.
    for (int i = 0; i < array.Length; i++)//задаём условие согласно которому пока индекс массива
                                          //не выходит за его рамки выполняем цикл:
    {
        if (i % 2 == 1)                   //если индекс при делении на 2 равен 1, 
                                          //значит этот индекс нечётный и мы выполняем:
            sum += array[i];              //присваиваем значению sum результат сложения sum и значения текущего индекса, удовлетоворяющего условию, что индекс является нечётным.
    }
    return sum;                           //возращаем сумму значений стоящих на нечётных индексах.
}

//3. Метод печати результатов работы
//тип данных метода - void/имя метода PrintSumEven
//(тип входного параметра и его имя с которым работает метод - массив целых чисел и целое число).
void PrintSumEven(int[] array, int result)
{
    Console.Write("В массиве: [");
    for (int i = 0; i < array.Length; i++)
    {
        if (i < array.Length - 1)
            Console.Write($"{array[i]}, ");
        else Console.Write($"{array[i]}] ");
    }
    Console.WriteLine($"сумма элементов, стоящих на нечётных позициях --> {result}");
}

int[] arr = FillArray(num);
int res = GetSumEven(arr);
PrintSumEven(arr, res);